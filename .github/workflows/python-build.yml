name: Python CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
        exclude:
          - os: macos-latest
            python-version: 3.5
          - os: macos-latest
            python-version: 3.6
          - os: macos-latest
            python-version: 3.8
          - os: macos-latest
            python-version: pypy3
          - os: windows-latest
            python-version: 3.5
          - os: windows-latest
            python-version: 3.6
          - os: windows-latest
            python-version: 3.8
          - os: macos-latest
            python-version: pypy3
          - os: windows-latest
            python-version: pypy3
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install development requirements
        run: |
          pip install setuptools wheel
          pip install -r requirements-dev.txt
      - name: Install testing requirements
        run: |
          pip install -r requirements-test.txt
      - name: Install requirements
        run: |
          pip install -r requirements.txt

      - name: Generate coverage report
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == 3.8 }}
        run: |
          pip install -e .
          pytest

      - name: Upload coverage to Codecov
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == 3.8 }}
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload coverage to Coveralls
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == 3.8 }}
        run: |
          COVERALLS_REPO_TOKEN=$COVERALLS_REPO_TOKEN coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
        shell: bash

  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jpetrucciani/bandit-check@master
        with:
          path: 'metapandas'
      - name: Install mypy pre-requisites
        run: python3 -m pip install lxml mypy
      - name: mypy-check
        run: python3 -m mypy .
        continue-on-error: true

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}