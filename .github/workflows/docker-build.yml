name: Backend Docker CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest
    container:
        image: node

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    # this is a simple install step - checks package.json is valid
    - name: Install npm dev tools ⚙️
      run: |
        npm install

  cd-dockerhub:
    runs-on: ubuntu-latest
    needs: ci

    steps:
        - uses: actions/checkout@v1
        - name: Docker login 🔐
          run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
        - name: Build ⚙️
          run: docker build -t online_store_backend .
        - name: Tags 🏷️
          run: |
            docker tag online_store_backend ${{ secrets.DOCKER_USER }}/online_store_backend:${{ github.sha }}
            docker tag online_store_backend ${{ secrets.DOCKER_USER }}/online_store_backend:latest
        - name: Push 🐋
          run: |
            docker push ${{ secrets.DOCKER_USER }}/online_store_backend:${{ github.sha }}
            docker push ${{ secrets.DOCKER_USER }}/online_store_backend:latest

  cd-github-packages:
    runs-on: ubuntu-latest
    needs: ci

    steps:
      - uses: actions/checkout@v1
      - name: Authenticate 🔐
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u Liam-Deacon --password-stdin
      - name: Build ⚙️
        run: docker build -t online_store_backend .
      - name: Tag Image 🏷️
        run: |
          docker tag online_store_backend docker.pkg.github.com/liam-deacon/online-store-rest-api/online_store_backend:latest
      - name: Publish 📦
        run: |
          docker push docker.pkg.github.com/liam-deacon/online-store-rest-api/online_store_backend:latest

  cd-heroku-flask-backend:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.5.7
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}} # Must be unique in Heroku
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          usedocker: true
          healthcheck: "https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com/apidocs/"
          rollbackonhealthcheckfailed: true
        env:
          JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
          FLASK_ENV: production
          HOST: '0.0.0.0'
