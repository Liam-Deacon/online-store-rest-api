# -*- coding: utf-8 -*-
"""Configuration file for the Sphinx documentation builder.

This file does only contain a selection of the most common options. For a
full list see the documentation:
http://www.sphinx-doc.org/en/master/config

Notes
-----
Path setup:

If extensions (or modules to document with autodoc) are in another directory,
add these directories to sys.path here. If the directory is relative to the
documentation root, use os.path.abspath to make it absolute, like shown here.
"""
import sys
from pathlib import Path
from datetime import date

package_root = str(Path(__file__).parent.parent.parent.absolute())
sys.path.insert(0, package_root)

# Read the configuration from setup.cfg
from setup import metadata  # noqa: E402 cannot import before package root is set

# Get version using PBR (based on git tags)
from pbr.version import VersionInfo  # noqa: E402
info = VersionInfo(metadata['name'])

# Load the version number from the package
NAME = metadata['name']
VERSION = info.version_string()
DESCRIPTION = metadata['summary']
AUTHOR = metadata['author']
PUBLISHER = metadata['publisher']


# -- Project information -----------------------------------------------------

project = NAME
publisher = PUBLISHER
start_year = 2020
current_year = date.today().year
copyright = '{}, {}'.format(current_year, publisher)  # pylint: disable=redefined-builtin
copyright = ('{}-'.format(start_year) if start_year != current_year else '') + copyright
author = AUTHOR

# The short X.Y version
try:
    version = '.'.join(VERSION.split('.')[:2])
except IndexError:
    version = ''
# The full version, including alpha/beta/rc tags
release = VERSION


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'pbr.sphinxext',
    'sphinx.ext.autosectionlabel',
    'sphinx.ext.intersphinx',
    'sphinx.ext.autosummary',
    # 'matplotlib.sphinxext.plot_directive',
    # 'IPython.sphinxext.ipython_directive',
    # 'IPython.sphinxext.ipython_console_highlighting',
    # 'sphinxcontrib.rsvgconverter',
    'sphinx.ext.doctest',
    'sphinx.ext.todo',
    'sphinx.ext.mathjax',
    'sphinx.ext.viewcode',
    'sphinx.ext.graphviz',
    'sphinx.ext.inheritance_diagram',
    'numpydoc',
    'sphinx.ext.napoleon',
    'sphinx.ext.autodoc',
    'sphinx_autodoc_typehints',
    # 'sphinx_autodoc_napoleon_typehints',
    'sphinx_git',
    'sphinx_pyreverse',
    'sphinxcontrib.openapi',
    # 'sphinxcontrib.programoutput',
    # 'sphinxcontrib.jupyter',
    # 'sphinxcontrib.packages',
]

# change math engine to ingmath for epub
if 'epub' in sys.argv:
    extensions[extensions.index('sphinx.ext.mathjax')] = 'sphinx.ext.imgmath'
    imgmath_image_format = 'svg'

if 'docx' in sys.argv:
    extensions.append('sphinxpapyrus.docxbuilder')

if 'markdown' in sys.argv:
    extensions.append('sphinx_markdown_builder')

# todo settings
todo_include_todos = True

# Napoleon settings
napoleon_google_docstring = True
napoleon_numpy_docstring = True
napoleon_include_init_with_doc = True
napoleon_include_private_with_doc = False
napoleon_include_special_with_doc = True
# napoleon_use_admonition_for_examples = False
# napoleon_use_admonition_for_notes = False
# napoleon_use_admonition_for_references = False
napoleon_use_ivar = False
napoleon_use_param = True
napoleon_use_rtype = True

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = ['.rst', '.md']
# source_suffix = '.md'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = [
    'build/*',
]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# matplotlib settings
plot_formats = ['svg', 'hires.png', 'pdf']
plot_include_source = False  # show plot source
plot_html_show_formats = False  # show available graph images
plot_html_show_source_link = False  # hide source link

# graphviz formats
graphviz_output_format = 'svg'

# Intersphinx mapping
intersphinx_mapping = {
    'python': ('http://docs.python.org/', None),
    'astropy': ('http://docs.astropy.org/en/latest/', None),
    'navpy': ('https://navpy.readthedocs.io/en/latest/', None),
    'pint': ('https://pint.readthedocs.io/en/latest/', None),
    'numpy': ('http://docs.scipy.org/doc/numpy/', None),
    'scipy': ('http://docs.scipy.org/doc/scipy/reference/', None),
    'matplotlib': ('http://matplotlib.sourceforge.net/', None),
    'pandas': ('http://pandas.pydata.org/pandas-docs/stable/', None)
}

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'  # 'alabaster'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}
html_theme_options = {
    'canonical_url': '',
    'logo_only': False,
    'display_version': True,
    'prev_next_buttons_location': 'bottom',
    'style_external_links': True,
    # Toc options
    'collapse_navigation': True,
    'sticky_navigation': True,
    'navigation_depth': 4,
    'includehidden': True,
    'titles_only': False
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

html_logo = 'static/logo.png'


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = project + '_doc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
# latex_engine = 'xelatex'
latex_documents = [
    (master_doc, project + '.%s.tex' % VERSION, project + ' Documentation',
     PUBLISHER.replace('&', '\\&'), 'manual'),
]
# latex_elements = {
#     # 'inputenc': '',
#     # 'utf8extra': '',
#     'preamble': r'''

# \usepackage{fontspec}
# \usepackage{svg}
# \usepackage{amsmath}
# ''',
# }
latex_logo = 'static/logo.png'
latex_additional_files = [
    'static/logo.png',
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, project, project + ' Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, project, project + ' Documentation',
     author, project, DESCRIPTION, 'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project
epub_author = author
epub_publisher = publisher
epub_copyright = copyright

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']


# -- Options for Docx output -------------------------------------------------
# docx_style = 'mystyle.docx'
docx_coreproperties = {
    'title': '{} {} Documentation'.format(project, release),
    'author': author,
    'copyright': copyright
}
docx_documents = [(master_doc, project, {
    'title': '{} {} Documentation'.format(project, release),
    'author': author,
}),
]
docx_pagebreak_level = 2  # insert page break before each heading 1, 2 & title
docx_imagetable_align = 'center'  # 'left', 'center', or 'right'

# --------------------------------------------
# sphinxcontrib-jupyter Configuration Settings
# --------------------------------------------

# Conversion Mode Settings
# If "all", convert codes and texts into jupyter notebook
# If "code", convert code-blocks only
jupyter_conversion_mode = "all"
jupyter_write_metadata = True

# Location for _static folder
jupyter_static_file_path = ["_static"]

# Configure Jupyter Kernels
jupyter_kernels = {
    "python3": {
        "kernelspec": {
            "display_name": "Python",
            "language": "python3",
            "name": "python3"
        },
        "file_extension": ".py",
    }
}

# Configure default language for Jupyter notebooks
# Can be changed in each notebook thanks to the ..highlight:: directive
jupyter_default_lang = "python3"

# Configure Jupyter headers
jupyter_headers = {
    "python3": [
    ],
    "julia": [
    ],
}

# Prepend a Welcome Message to Each Notebook
# jupyter_welcome_block = "welcome.rst"

# Solutions Configuration
jupyter_drop_solutions = True

# Tests configurations
jupyter_drop_tests = True

# Add Ipython as Synonym for tests
jupyter_lang_synonyms = ["ipython"]

# Image Prefix (enable web storage references)
# jupyter_images_urlpath = "https://www.suasnews.com/wp-content/uploads/2018/11/NATS-logo.jpg"

# -- Extension configuration -------------------------------------------------

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# Set the default DPI for images
pdf_default_dpi = 300

# other
# numfig = True
